#include "FastLED.h"

// ELDS
#define NUM_LEDS 82
#define DATA_PIN 4
CRGB leds[NUM_LEDS];

#define HEIGHT 6
#define WIDTH  6
#define MASK_WIDTH 11

signed char letters[26][HEIGHT][WIDTH] = {
                      {{0,1,1,0,0,-1}, {1,0,0,1,0,-1}, {1,0,0,1,0,-1}, {1,1,1,1,0,-1}, {1,0,0,1,0,-1}, {1,0,0,1,0,-1}}, // A
                      {{1,1,1,0,0,-1}, {1,0,0,1,0,-1}, {1,1,1,0,0,-1}, {1,0,0,1,0,-1}, {1,0,0,1,0,-1}, {1,1,1,0,0,-1}}, // B
                      {{0,1,1,0,0,-1}, {1,0,0,1,0,-1}, {1,0,0,0,0,-1}, {1,0,0,0,0,-1}, {1,0,0,1,0,-1}, {0,1,1,0,0,-1}}, // C
                      {{1,1,1,0,0,-1}, {1,0,0,1,0,-1}, {1,0,0,1,0,-1}, {1,0,0,1,0,-1}, {1,0,0,1,0,-1}, {1,1,1,0,0,-1}}, // D
                      {{1,1,1,1,0,-1}, {1,0,0,0,0,-1}, {1,1,1,0,0,-1}, {1,0,0,0,0,-1}, {1,0,0,0,0,-1}, {1,1,1,1,0,-1}}, // E
                      {{1,1,1,1,0,-1}, {1,0,0,0,0,-1}, {1,1,1,0,0,-1}, {1,0,0,0,0,-1}, {1,0,0,0,0,-1}, {1,0,0,0,0,-1}}, // F
                      {{0,1,1,0,0,-1}, {1,0,0,1,0,-1}, {1,0,0,0,0,-1}, {1,0,1,1,0,-1}, {1,0,0,1,0,-1}, {0,1,1,0,0,-1}}, // G
                      {{1,0,0,1,0,-1}, {1,0,0,1,0,-1}, {1,1,1,1,0,-1}, {1,0,0,1,0,-1}, {1,0,0,1,0,-1}, {1,0,0,1,0,-1}}, // H
                      {{1,1,1,1,1,0}, {0,0,1,0,0,0}, {0,0,1,0,0,0}, {0,0,1,0,0,0}, {0,0,1,0,0,0}, {1,1,1,1,1,0}}, // I
                      {{0,0,0,1,0,-1}, {0,0,0,1,0,-1}, {0,0,0,1,0,-1}, {1,0,0,1,0,-1}, {1,0,0,1,0,-1}, {0,1,1,0,0,-1}}, // J
                      {{1,0,0,1,0,-1}, {1,0,1,0,0,-1}, {1,1,0,0,0,-1}, {1,0,1,0,0,-1}, {1,0,0,1,0,-1}, {1,0,0,1,0,-1}}, // k
                      {{1,0,0,0,0,-1}, {1,0,0,0,0,-1}, {1,0,0,0,0,-1}, {1,0,0,0,0,-1}, {1,0,0,0,0,-1}, {1,1,1,1,0,-1}}, // L
                      {{1,0,0,0,1,0}, {1,1,0,1,1,0}, {1,0,1,0,1,0}, {1,0,0,0,1,0}, {1,0,0,0,1,0}, {1,0,0,0,1,0}}, //M
                      {{1,0,0,1,0,-1}, {1,0,0,1,0,-1}, {1,1,0,1,0,-1}, {1,0,1,1,0,-1}, {1,0,0,1,0,-1}, {1,0,0,1,0,-1}}, // N
                      {{0,1,1,0,0,-1}, {1,0,0,1,0,-1}, {1,0,0,1,0,-1}, {1,0,0,1,0,-1}, {1,0,0,1,0,-1}, {0,1,1,0,0,-1}}, // O
                      {{1,1,1,0,0,-1}, {1,0,0,1,0,-1}, {1,0,0,1,0,-1}, {1,1,1,0,0,-1}, {1,0,0,0,0,-1}, {1,0,0,0,0,-1}}, // P
                      {{0,1,1,0,0,0}, {1,0,0,1,0,0}, {1,0,0,1,0,0}, {1,0,0,1,0,0}, {1,0,0,1,0,0}, {0,1,1,1,1,0}}, // Q
                      {{1,1,1,0,0,-1}, {1,0,0,1,0,-1}, {1,0,0,1,0,-1}, {1,1,1,0,0,-1}, {1,0,0,1,0,-1}, {1,0,0,1,0,-1}}, // R
                      {{0,1,1,0,0,-1}, {1,0,0,1,0,-1}, {0,1,0,0,0,-1}, {0,0,1,0,0,-1}, {1,0,0,1,0,-1}, {0,1,1,0,0,-1}}, // S
                      {{1,1,1,1,1,0}, {0,0,1,0,0,0}, {0,0,1,0,0,0}, {0,0,1,0,0,0}, {0,0,1,0,0,0}, {0,0,1,0,0,0}}, //T
                      {{1,0,0,1,0,-1}, {1,0,0,1,0,-1}, {1,0,0,1,0,-1}, {1,0,0,1,0,-1}, {1,0,0,1,0,-1}, {1,1,1,1,0,-1}},//U
                      {{1,0,0,1,0,-1}, {1,0,0,1,0,-1}, {1,0,0,1,0,-1}, {1,0,0,1,0,-1}, {1,0,0,1,0,-1}, {0,1,1,0,0,-1}},//V
                      {{1,0,0,0,1,0}, {1,0,0,0,1,0}, {1,0,0,0,1,0}, {1,0,1,0,1,0}, {1,0,1,0,1,0}, {0,1,0,1,0,0}},//W
                      {{1,0,0,1,0,-1}, {1,0,0,1,0,-1}, {0,1,1,0,0,-1}, {1,0,0,1,0,-1}, {1,0,0,1,0,-1}, {1,0,0,1,0,-1}},//X
                      {{1,0,0,0,1,0}, {1,0,0,0,1,0}, {0,1,0,1,0,0}, {0,0,1,0,0,0}, {0,0,1,0,0,0}, {0,0,1,0,0,0}},//Y
                      {{1,1,1,1,0,-1}, {0,0,0,1,0,-1}, {0,0,1,0,0,-1}, {0,1,0,0,0,-1}, {1,0,0,0,0,-1}, {1,1,1,1,0,-1}}//Z
                    };

void setup() {

  //ELDS
  FastLED.addLeds<NEOPIXEL, DATA_PIN>(leds, NUM_LEDS);
  FastLED.setBrightness(10);
}

void loop() { 

    //leds[20] = CRGB::Blue;
    FastLED.show();
    displayText("abcdefghijklmnopqrstuv", CRGB::Red, 200);
}

void displayText(char str[], CRGB color, int delayTime){

    for (int i = 0; i < strlen(str); i++){

        int index = str[i] - 'a';

        int tempWidth = WIDTH;

        if(letters[index][0][WIDTH-1])
          tempWidth--;

        for(int w=0; w<tempWidth; w++){

            moveText();
  
              for(int h=0; h<HEIGHT; h++){
  
                  if(letters[index][h][w] == 1){
                      if(h%2 == 0){
                          leds[MASK_WIDTH+MASK_WIDTH*h-1] = color;
                      }else{
                          leds[MASK_WIDTH*h]  = color;
                      }
                  }else {
                      if(h%2 == 0){
                          leds[MASK_WIDTH+MASK_WIDTH*h-1] = CRGB::Black;
                      }else{
                          leds[MASK_WIDTH*h]  = CRGB::Black;
                      }
                  }
              }
  
              FastLED.show();
              delay(delayTime);
        }
    }
}

void moveText(){

    int row;
    int w = MASK_WIDTH;
    int temp;
  
    for(int i=0; i<NUM_LEDS; i++){
  
        row = i/w;
        
        if( ( row%2 == 0) )
            leds[i] = leds[i+1];
    }
  
    for(int i=NUM_LEDS-1; i>0; i--){
        row = i/w;
          
        if( ( row%2 != 0) )
            leds[i] = leds[i-1];
    }
  
}
